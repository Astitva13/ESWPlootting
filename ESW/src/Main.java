
import java.awt.BorderLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import org.openqa.selenium.By;  
import org.openqa.selenium.WebDriver;  
import org.openqa.selenium.chrome.ChromeDriver;  
import java.util.regex.Pattern;
import java.util.concurrent.TimeUnit;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeOptions;
import org.jfree.chart.ChartPanel;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author astitva
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        time = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ESW Project");
        setBackground(new java.awt.Color(0, 0, 0));

        panel.setBackground(new java.awt.Color(255, 255, 255));
        panel.setLayout(new java.awt.BorderLayout());

        jButton1.setText("Refresh Values");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Last Updated:");

        time.setText("Never");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addComponent(jButton1)
                .addGap(95, 95, 95)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(161, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1)
                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    int sx =100;

    ArrayList get_data()
    {
        ArrayList a = new ArrayList(sx+1);
        System.setProperty("webdriver.chrome.driver", "/media/astitva/Utilities/Java/Jar_files/Selenium/chromedriver78");
        WebDriver driver=new ChromeDriver(new ChromeOptions().setHeadless(true));  
        driver.get("http://onem2m.iiit.ac.in:443/webpage/welcome/index.html?context=/~&cseId=in-cse");
        driver.findElement(By.xpath("//button[contains(.,'Login')]")).click();
        WebDriverWait wait = new WebDriverWait(driver,20);
        WebElement web_1= wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("/html/body/div[2]/div[2]/div[1]/div/ul/li/ul/li[7]")));
        driver.findElement(By.xpath("/html/body/div[2]/div[2]/div[1]/div/ul/li/ul/li[7]")).click();
        driver.findElement(By.xpath("/html/body/div[2]/div[2]/div[1]/div/ul/li/ul/li[7]/ul/li[1]")).click();
        while(driver.findElements( By.xpath("/html/body/div[2]/div[2]/div[1]/div/ul/li/ul/li[7]/ul/li[1]/ul/li[1]") ).size() == 0)
          {}
        System.out.println("Done");
        int size = Integer.valueOf(driver.findElements( By.xpath("/html/body/div[2]/div[2]/div[1]/div/ul/li/ul/li[7]/ul/li[1]/ul/li") ).size());
        for (int i = 0; i < sx; i++) {
            driver.findElement(By.xpath("/html/body/div[2]/div[2]/div[1]/div/ul/li/ul/li[7]/ul/li[1]/ul/li["+(size-sx+i)+"]")).click();
            String ans = driver.findElement(By.xpath("/html/body/div[2]/div[2]/div[2]/div[1]/table/tbody/tr[10]/td[2]")).getText()+" : ";
            ans+= driver.findElement(By.xpath("/html/body/div[2]/div[2]/div[2]/div[1]/table/tbody/tr[6]/td[2]")).getText();
            a.add(i,ans);
            System.out.println(ans);
        }
        System.out.println("Completed");
        driver.close();
        return a;
    }
    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ArrayList a = get_data();
                System.out.println("Completed again");
        DefaultCategoryDataset dataset = new DefaultCategoryDataset( );
        for(int i=0;i<sx;i++)
        {
            String s = ((String)a.get(i)).split(":")[1].trim().split("T")[1];
            String time = s.subSequence(0, 2) + ":" + s.subSequence(2, 4);
            dataset.addValue( Integer.parseInt(((String)a.get(i)).split(":")[0].trim()) , "Values" , time );
        }
        JFreeChart lineChart = ChartFactory.createLineChart(
         "Data Recieved with time",
         "Time","Value Recieved",
         dataset,PlotOrientation.VERTICAL,
         true,true,false);
         
      ChartPanel chartPanel = new ChartPanel( lineChart );
      panel.removeAll();
      panel.add(chartPanel,BorderLayout.CENTER);
      panel.validate();
      time.setText(new SimpleDateFormat("HH:MM:SS dd-MM-YY").format(new Date()).toString());
      
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panel;
    private javax.swing.JLabel time;
    // End of variables declaration//GEN-END:variables
}
